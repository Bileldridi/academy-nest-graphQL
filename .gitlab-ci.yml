# image: docker:latest
# services:
  # - docker:dind

# variables:
#   DOCKER_DRIVER: overlay

stages:
    - sonar-analysis
    - build-app
    - build-image
    - deploy

quality-scan:
    image: node:lts 
    stage: sonar-analysis
    script:
        - apt-get update
        - apt-get install -y default-jdk
        - npm install
        - npm run sonar
    when: manual

build-app:
    image: node:lts-alpine
    stage: build-app
    script:
        - npm install
        - npm run gen-ci
        - npm run build
    artifacts:
        paths:
        - dist
        - node_modules


build-image:
  stage: build-image
  image: docker:18.09.7-dind
  services:
    - docker:dind
  script:
    - sleep 10s
    - docker info
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker build -t "${CI_REGISTRY_IMAGE}:v${CI_PIPELINE_ID}" .
    - echo "${CI_REGISTRY_IMAGE}"
    # - docker tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    # - test ! -z "${CI_COMMIT_TAG}" && docker push "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:v${CI_PIPELINE_ID}"


deploy-dev:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - 'which ssh-agent || (apt-get update && apt-get install openssh-client -y)'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - echo $CI_PIPELINE_IID
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - scp -o StrictHostKeyChecking=no -r docker-compose.yml $dev_server_user@$dev_server_ip:/root/academy/back
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker pull ${CI_REGISTRY_IMAGE}:v$CI_PIPELINE_ID
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker tag ${CI_REGISTRY_IMAGE}:v$CI_PIPELINE_ID ${CI_REGISTRY_IMAGE}:latest
    #- ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip docker push registry.gitlab.com/fivepointslab/eval-platform/docker-sandboxer:latest
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker-compose -f /root/academy/back/docker-compose.yml up -d
  when: manual
  
#  only:
#    - master

deploy-prod:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - 'which ssh-agent || (apt-get update && apt-get install openssh-client -y)'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - echo $CI_PIPELINE_IID
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - scp -o StrictHostKeyChecking=no -r docker-compose.yml $dev_server_user@$dev_server_ip:/root/academy/front
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker pull registry.gitlab.com/fivepointslab/academy-platform/academy-frontend:v$CI_PIPELINE_ID
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker tag registry.gitlab.com/fivepointslab/academy-platform/academy-frontend:v$CI_PIPELINE_ID registry.gitlab.com/fivepointslab/academy-platform/academy-frontend:latest
    #- ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip docker push registry.gitlab.com/fivepointslab/eval-platform/docker-sandboxer:latest
    - ssh -o StrictHostKeyChecking=no $dev_server_user@$dev_server_ip sudo docker-compose -f /root/academy/front/docker-compose.yml up -d
  when: manual
  only:
    - master


