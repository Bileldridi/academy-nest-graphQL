type Query {
  getChapters: [Chapter]
  Chapter(id: String!): Chapter
  checkQuiz(id: String!): Message
  removeChapter(id: String!): Message
}

type Mutation {
  createChapter(createChapterInput: CreateChapterInput): Chapter
}
type Mutation {
  submitQuiz(quizAnswerInput: QuizAnswerInput): Message
}
type Mutation {
  updateChapter(updateChapterInput: UpdateChapterInput): Chapter
}

type Subscription {
  ChapterCreated: Chapter
}

type Chapter {
  id: String
  title: String
  content: String
  type: String
  createDate: Float
  course: Course
  status: String
  files: [String]
  comments: [Comment]
  quiz: [Quiz]
}

type Quiz {
  question: String
  correctAnswer: String
  options: [Option]
}

type Option {
  option: String
}

type PublicChapter {
  id: String
  title: String
}

input CreateChapterInput {
  title: String
  content: String
  course: String
  type: String
  status: String
  quiz: [QuizInput]
  files: [String]
}

input QuizInput {
  question: String
  correctAnswer: Int
  options: [OptionInput]
}

input OptionInput {
  option: String
}

input UpdateChapterInput {
  id: String
  title: String
  content: String
  course: String
  type: String
  status: String
  files: [String]
  comments: [String]
  quiz: [QuizInput]
}

input QuizAnswerInput {
  id: String
  answers: [Int]
}
