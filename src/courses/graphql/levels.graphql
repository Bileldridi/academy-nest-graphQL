type Query {
  getLevels: [Level]
  Level(id: String!): Level
  getHomeLevels: [PublicLevel]
  removeLevel(id: String!): Message
  removePath(id: String!): Message
}

type Mutation {
  createLevel(createLevelInput: CreateLevelInput): Level
}
type Mutation {
  updateLevel(updateLevelInput: UpdateLevelInput): Level
}

type Subscription {
  LevelCreated: Level
}

type Level {
  id: String
  title: String
  createDate: Float
  courses: [Course]
  subTitle: String
  desc: String
  pic: String
  promotion: Int
  shortDesc: String
  status: String
  duration: Int
  price: Int
  assistancePrice: Int
}

type PublicLevel {
  id: String
  title: String
  courses: [PublicCourse]
  subTitle: String
  desc: String
  status: String
  promotion: Int
  shortDesc: String
  pic: String
  price: Int
  assistancePrice: Int
}

input CreateLevelInput {
  title: String
  courses: [String]
  subTitle: String
  desc: String
  pic: String
  shortDesc: String
  promotion: Int
  status: String
  duration: Int
  price: Int  
  assistancePrice: Int
}
input UpdateLevelInput {
  id: String
  title: String
  courses: [String]
  subTitle: String
  desc: String
  pic: String
  promotion: Int
  shortDesc: String
  status: String
  duration: Int
  price: Int
  assistancePrice: Int
}
