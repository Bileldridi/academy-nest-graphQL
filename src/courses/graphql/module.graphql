type Query {
  getModules: [Module]
  Module(id: String!): Module
  getHomeModules: [PublicModule]
  removeModule(id: String!): Message
  removeBootcamp(id: String!): Message
  restoreModule(id: String!): Message
  restoreBootcamp(id: String!): Message
}

type Mutation {
  createModule(createModuleInput: CreateModuleInput): Module
}
type Mutation {
  updateModule(updateModuleInput: UpdateModuleInput): Module
}

type Subscription {
  ModuleCreated: Module
}

type Module {
  id: String
  title: String
  createDate: Float
  levels: [Level]
  subTitle: String
  desc: String
  pic: String
  promotion: Int
  shortDesc: String
  status: String
  duration: Int
  price: Int
  assistancePrice: Int
}

type PublicModule {
  id: String
  title: String
  levels: [PublicLevel]
  subTitle: String
  desc: String
  status: String
  promotion: Int
  shortDesc: String
  pic: String
  price: Int
  assistancePrice: Int
}

input CreateModuleInput {
  title: String
  levels: [String]
  subTitle: String
  desc: String
  pic: String
  shortDesc: String
  promotion: Int
  status: String
  duration: Int
  price: Int 
  assistancePrice: Int
}
input UpdateModuleInput {
  id: String
  title: String
  levels: [String]
  subTitle: String
  desc: String
  pic: String
  promotion: Int
  shortDesc: String
  status: String
  duration: Int
  price: Int
  assistancePrice: Int
}
