type Query {
  getProgresss: [Progress]
  Progress(id: String!): Progress
  removeProgress(id: String!): Progress
}

type Mutation {
  createProgress(createProgressInput: CreateProgressInput): Progress
}

type Mutation {
  updateProgress(updateProgressInput: UpdateProgressInput): Progress
}

type Subscription {
  ProgressCreated: Progress
}

type Progress {
  id: String
  candidate: User
  chapter: Chapter
  type: String
  score: Int
  desc: String
  createDate: Float
}

input CreateProgressInput {
  candidate: String
  chapter: String
  type: String
  score: Int
  desc: String
}

input UpdateProgressInput {
  id: String
  candidate: String
  chapter: String
  type: String
  score: Int
  desc: String
}
